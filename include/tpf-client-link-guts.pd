#N canvas 0 106 406 243 10;
#N canvas 247 142 448 324 get.peer.data 0;
#X obj 21 110 sel -1;
#X msg 21 242 peer data access failed;
#X obj 54 131 text get \$1.clients;
#X obj 54 151 unpack f s f s;
#X obj 108 196 s \$3.peer.master;
#X obj 135 173 s \$3.peer.ip;
#X obj 21 15 r \$3.peer.ready;
#X obj 21 38 sel 1;
#X obj 21 61 symbol;
#X obj 71 63 r \$3.peer.name;
#X obj 54 219 s \$3.peer.id;
#X obj 21 262 s \$1.error;
#X obj 21 90 text search \$1.clients 1;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 1 0 11 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 2 4 0;
#X connect 3 3 5 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 9 0 8 1;
#X connect 12 0 0 0;
#X restore 13 36 pd get.peer.data;
#N canvas 277 523 1094 427 gui.code 0;
#X obj 744 19 r \$3.reset;
#X obj 811 18 r \$3.peer.ready;
#X obj 811 38 sel 0;
#X obj 744 60 s \$3.display.reset;
#X obj 196 249 s \$3.glitch.label;
#X obj 227 269 s \$3.ooo.label;
#X obj 201 160 r \$3.display.reset;
#X msg 201 180 label empty;
#X obj 334 18 r \$3.jacktrip.stats;
#X obj 334 38 route dropped_count;
#X obj 334 60 makefilename %4d;
#X msg 334 80 label \$1;
#X obj 334 100 s \$3.dropped.label;
#X obj 173 228 s \$3.dropped.label;
#X msg 514 178 0;
#X obj 464 18 r \$3.jacktrip.stats;
#X obj 464 60 makefilename %4d;
#X msg 464 80 label \$1;
#X obj 594 18 r \$3.jacktrip.stats;
#X obj 594 60 makefilename %4d;
#X msg 594 80 label \$1;
#X obj 464 38 route glitch_count;
#X obj 464 100 s \$3.glitch.label;
#X obj 594 38 route ooo_count;
#X obj 594 100 s \$3.ooo.label;
#X obj 591 210 r \$3.from.jacktrip;
#X obj 591 230 route STATISTICS;
#X obj 591 250 s \$3.jacktrip.stats;
#X obj 360 183 r \$3.from.jacktrip;
#X obj 360 203 route STATUS;
#X obj 360 223 route inchannels;
#X obj 360 243 makefilename %4d;
#X msg 360 263 label \$1;
#X obj 360 283 s \$3.channels.label;
#X obj 240 289 s \$3.channels.label;
#N canvas 653 155 946 796 tx.button 0;
#X obj 47 429 s \$3.tx.switch.r;
#X msg 47 400 color \$1 \$2 \$3;
#X msg 47 348 0 0 0;
#X text 599 47 0 = reset;
#X obj 183 189 sel 1;
#X msg 183 210 1;
#X msg 212 210 0;
#X obj 158 278 spigot;
#X obj 158 163 r \$3.blink.clock;
#X obj 158 299 sel 0 1;
#X msg 322 210 0;
#X obj 268 278 spigot;
#X obj 268 163 r \$3.blink.clock;
#X obj 268 299 sel 0 1;
#X msg 293 210 1;
#X obj 293 189 sel 2;
#X text 600 125 4 = aborted;
#X obj 47 60 r \$3.udp.link.status;
#X obj 242 41 r \$3.display.reset;
#X text 599 67 1 = waiting for peer (stun);
#X text 599 87 2 = waiting for user (stun);
#X text 601 108 3 = connected (stun);
#X text 600 146 5 = waiting for peer (server);
#X text 601 165 6 = waiting for user (server);
#X text 601 186 7 = connected (server);
#X obj 47 88 t a a a a a;
#X obj 47 136 select 0 3 4 7;
#X msg 226 354 224 224 224;
#X msg 95 350 128 0 255;
#X msg 308 356 0 0 255;
#X msg 442 210 0;
#X obj 388 278 spigot;
#X obj 388 163 r \$3.blink.clock;
#X obj 388 299 sel 0 1;
#X msg 413 210 1;
#X msg 545 210 0;
#X obj 491 278 spigot;
#X obj 491 163 r \$3.blink.clock;
#X obj 491 299 sel 0 1;
#X msg 516 210 1;
#X obj 413 189 sel 5;
#X obj 516 189 sel 6;
#X msg 155 350 0 255 0;
#X msg 367 356 255 255 0;
#X obj 603 363 r \$3.tx.switch.s;
#X obj 631 386 r \$3.udp.link.status;
#X obj 603 386 f;
#X obj 603 409 sel 0;
#X obj 603 647 del 300;
#X msg 641 622 stop;
#X obj 603 532 f;
#X obj 688 538 + 1;
#X obj 603 554 t a a;
#X obj 603 578 sel 0 1;
#X obj 622 600 t b b b;
#X msg 707 575 0;
#X obj 603 668 t b b;
#X obj 672 670 s \$3.initiate.stun;
#X obj 603 750 s \$3.initiate.server;
#X obj 630 435 r \$3.peer.ready;
#X obj 603 435 f;
#X obj 603 457 sel 1;
#X obj 176 235 t a a;
#X obj 413 231 t a a;
#X obj 603 485 f;
#X obj 603 507 sel 1;
#X obj 664 463 r \$1.intercom;
#X obj 664 486 route param_check;
#X obj 631 702 r \$3.udp.link.status;
#X obj 603 702 f;
#X obj 603 725 sel 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 62 0;
#X connect 6 0 7 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 2 0;
#X connect 9 1 28 0;
#X connect 10 0 11 1;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 2 0;
#X connect 13 1 42 0;
#X connect 14 0 11 1;
#X connect 15 0 14 0;
#X connect 15 1 10 0;
#X connect 17 0 25 0;
#X connect 18 0 2 0;
#X connect 25 0 26 0;
#X connect 25 1 4 0;
#X connect 25 2 15 0;
#X connect 25 3 40 0;
#X connect 25 4 41 0;
#X connect 26 0 2 0;
#X connect 26 1 28 0;
#X connect 26 2 27 0;
#X connect 26 3 29 0;
#X connect 27 0 1 0;
#X connect 28 0 1 0;
#X connect 29 0 1 0;
#X connect 30 0 31 1;
#X connect 31 0 33 0;
#X connect 32 0 31 0;
#X connect 33 0 2 0;
#X connect 33 1 29 0;
#X connect 34 0 63 0;
#X connect 35 0 36 1;
#X connect 36 0 38 0;
#X connect 37 0 36 0;
#X connect 38 0 2 0;
#X connect 38 1 43 0;
#X connect 39 0 36 1;
#X connect 40 0 34 0;
#X connect 40 1 30 0;
#X connect 41 0 39 0;
#X connect 41 1 35 0;
#X connect 42 0 1 0;
#X connect 43 0 1 0;
#X connect 44 0 46 0;
#X connect 45 0 46 1;
#X connect 46 0 47 0;
#X connect 47 0 60 0;
#X connect 48 0 56 0;
#X connect 49 0 48 0;
#X connect 50 0 52 0;
#X connect 51 0 50 1;
#X connect 52 0 53 0;
#X connect 52 1 51 0;
#X connect 53 0 48 0;
#X connect 53 0 29 0;
#X connect 53 1 54 0;
#X connect 54 0 57 0;
#X connect 54 1 49 0;
#X connect 54 2 55 0;
#X connect 55 0 50 1;
#X connect 56 0 69 0;
#X connect 56 1 55 0;
#X connect 59 0 60 1;
#X connect 60 0 61 0;
#X connect 61 0 64 0;
#X connect 62 0 7 0;
#X connect 62 1 7 1;
#X connect 63 0 31 0;
#X connect 63 1 31 1;
#X connect 64 0 65 0;
#X connect 65 0 50 0;
#X connect 66 0 67 0;
#X connect 67 0 64 1;
#X connect 68 0 69 1;
#X connect 69 0 70 0;
#X connect 70 0 58 0;
#X restore 15 73 pd tx.button;
#X obj 805 138 metro 500;
#X obj 805 159 == 0;
#X obj 805 180 t a a;
#X obj 805 110 loadbang;
#X obj 805 204 s \$3.blink.clock;
#X obj 514 127 r \$3.udp.link.status;
#X obj 514 148 sel 3;
#X obj 446 334 r \$3.from.jacktrip;
#X obj 446 354 route STATUS;
#X obj 446 375 route receiving;
#N canvas 625 406 491 361 rx.button 0;
#X obj 16 14 r \$3.from.jacktrip;
#X obj 16 34 route STATUS;
#X obj 16 55 route receiving;
#X obj 16 76 sel 0 1;
#X obj 16 269 s \$3.rx.switch.r;
#X msg 16 246 color \$1 \$2 \$3;
#X obj 278 141 r \$3.display.reset;
#X msg 278 190 0 0 0;
#X obj 296 163 loadbang;
#X obj 31 103 r \$3.udp.link.status;
#X obj 16 128 f;
#X obj 16 155 sel 0;
#X obj 86 140 sel 0;
#X msg 16 190 224 224 224;
#X obj 147 188 list append;
#X msg 167 108 128 0 255;
#X obj 167 55 r \$3.udp.link.status;
#X obj 167 80 sel 3 7;
#X msg 239 112 0 0 255;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 1 14 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 10 1;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 11 1 13 0;
#X connect 12 0 7 0;
#X connect 13 0 5 0;
#X connect 14 0 5 0;
#X connect 15 0 14 1;
#X connect 16 0 17 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 14 1;
#X restore 15 99 pd rx.button;
#N canvas 347 761 450 300 delay.nb 0;
#X obj 45 170 s \$3.delay.nb.r;
#X msg 45 144 color -1 \$1 -1;
#X msg 45 72 -1;
#X msg 81 76 0;
#X obj 45 17 r \$3.peer.ready;
#X obj 45 38 sel 0 1;
#X obj 81 97 t a a;
#X obj 228 74 s \$3.delay;
#X obj 228 44 r \$3.delay.nb.s;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 5 1 3 0;
#X connect 6 0 1 0;
#X connect 6 1 0 0;
#X connect 8 0 7 0;
#X restore 14 124 pd delay.nb;
#N canvas 0 106 431 345 peer.name 0;
#X obj 11 74 s \$3.client.label;
#X msg 11 46 label \$1;
#X obj 11 22 r \$3.peer.name;
#X obj 12 105 r \$3.peer.ready;
#X obj 12 128 sel 0 1;
#X obj 12 207 s \$3.client.label;
#X msg 12 179 color -1 -1 \$1;
#X msg 12 153 1;
#X msg 51 155 0;
#X msg 127 41 label empty;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 8 0;
#X connect 6 0 5 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 0 0;
#X restore 17 18 pd peer.name;
#N canvas 428 518 477 324 arrow.up.down 0;
#X obj 12 16 r \$3.arrow.up;
#X obj 12 39 sel 0;
#X obj 54 40 t a;
#X obj 250 289 s \$3.arrow.up.r;
#X msg 250 249 color -1 -1 \$1;
#X msg 250 221 12;
#X msg 281 220 1;
#X obj 223 32 r \$3.peer.name;
#X obj 223 55 select empty;
#X msg 223 78 0;
#X msg 292 78 1;
#X obj 330 31 r \$3.udp.link.status;
#X obj 330 57 == 0;
#X obj 223 147 &&;
#X obj 330 91 t b a;
#X obj 223 103 t a;
#X obj 250 195 sel 0 1;
#X obj 12 63 f \$2;
#X obj 12 86 - 1;
#X obj 100 238 s \$3.swap.request;
#X obj 100 40 sel 0;
#X obj 142 41 t a;
#X obj 100 64 f \$2;
#X obj 100 17 r \$3.arrow.down;
#X obj 100 87 + 1;
#X obj 352 289 s \$3.arrow.down.r;
#X obj 223 170 t a a;
#X obj 100 148 spigot;
#X connect 0 0 1 0;
#X connect 1 0 17 0;
#X connect 1 1 2 0;
#X connect 2 0 1 1;
#X connect 4 0 3 0;
#X connect 4 0 25 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 10 0;
#X connect 9 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 13 0 26 0;
#X connect 14 0 13 0;
#X connect 14 1 13 1;
#X connect 15 0 13 0;
#X connect 16 0 5 0;
#X connect 16 1 6 0;
#X connect 17 0 18 0;
#X connect 18 0 27 0;
#X connect 20 0 22 0;
#X connect 20 1 21 0;
#X connect 21 0 20 1;
#X connect 22 0 24 0;
#X connect 23 0 20 0;
#X connect 24 0 27 0;
#X connect 26 0 27 1;
#X connect 26 1 16 0;
#X connect 27 0 19 0;
#X restore 16 46 pd arrow.up.down;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 7 0 5 0;
#X connect 7 0 13 0;
#X connect 7 0 34 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 14 0 10 0;
#X connect 14 0 16 0;
#X connect 14 0 19 0;
#X connect 14 0 31 0;
#X connect 15 0 21 0;
#X connect 16 0 17 0;
#X connect 17 0 22 0;
#X connect 18 0 23 0;
#X connect 19 0 20 0;
#X connect 20 0 24 0;
#X connect 21 0 16 0;
#X connect 23 0 19 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 38 0 40 0;
#X connect 38 1 37 1;
#X connect 39 0 36 0;
#X connect 41 0 42 0;
#X connect 42 0 14 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X restore 13 132 pd gui.code;
#N canvas 112 142 1460 665 jacktrip.start.stop 0;
#X obj 93 56 r \$3.peer.port;
#X obj 25 117 pack f f;
#X obj 93 77 r \$3.bind.port;
#X obj 25 137 list prepend;
#X obj 25 575 s \$3.to.jacktrip;
#X obj 364 249 s \$3.to.jacktrip;
#X obj 315 131 r \$3.peer.ready;
#X obj 315 153 sel 0;
#X msg 364 219 stop;
#X obj 533 129 r \$3.from.jacktrip;
#X obj 533 149 route STATUS;
#X obj 315 174 f;
#X obj 25 96 f;
#X obj 324 33 r \$1.channels;
#X obj 420 33 r \$1.blocksize;
#X msg 324 53 outchannels \$1;
#X msg 797 437 queue \$1;
#X obj 324 83 s \$3.to.jacktrip;
#X msg 25 524 start;
#X msg 420 53 blocksize \$1;
#X obj 25 20 r \$3.udp.link.status;
#X msg 72 525 server \$1 \, peerport \$2 \, bindport \$3;
#X obj 533 268 s \$3.udp.link.status;
#X obj 533 215 sel 0;
#X msg 533 240 4;
#X obj 25 483 t b a;
#X text 67 483 peer ip \, peer port \, bind port \, server port;
#X obj 352 301 r \$3.tx.switch.s;
#X obj 380 324 r \$3.udp.link.status;
#X obj 352 324 f;
#X obj 576 541 s \$3.to.jacktrip;
#X msg 576 522 stop;
#X obj 549 608 s \$3.udp.link.status;
#X msg 549 586 0;
#X obj 549 500 t b b;
#X obj 352 381 t b b;
#X obj 352 586 s \$1.send;
#X obj 352 519 f;
#X obj 352 540 pack f f;
#X msg 594 401 set /\$1;
#X obj 575 315 r \$1.receive;
#X obj 575 422 routeOSC /__;
#X obj 575 339 routeOSC /*;
#X msg 352 562 /\$1/tpf/requeststop/\$2;
#X obj 575 359 routeOSC /tpf/requeststop;
#X obj 546 194 tgl 20 0 empty empty empty 17 7 0 10 -204786 -1 -1 0
1;
#X obj 549 565 del 0;
#X obj 533 169 route connected;
#X obj 93 97 r \$3.peer.host;
#X obj 25 41 sel 3 7;
#X obj 25 72 b;
#X obj 352 347 sel 1 3 4 5 7;
#X obj 25 198 t a a;
#X obj 52 380 s \$1.info;
#X obj 52 247 t a a;
#X obj 67 316 list append;
#X obj 170 223 change 0;
#X obj 170 250 sel 0;
#X obj 367 497 r \$3.peer.id;
#X obj 397 517 r \$1.id;
#X obj 594 380 r \$3.peer.id;
#X obj 315 273 s \$3.udp.link.status;
#X msg 315 245 0;
#X obj 315 219 t b b;
#X obj 52 223 list append;
#X obj 77 195 r \$3.peer.name;
#X obj 797 462 s \$3.to.jacktrip;
#X obj 833 17 r \$3.from.jacktrip;
#X obj 833 37 route STATUS;
#X obj 900 200 /;
#X obj 900 156 t a b;
#X obj 932 179 samplerate~;
#X obj 900 132 * 1000;
#X obj 818 235 t b a, f 6;
#X obj 797 283 expr ceil($f1);
#X obj 797 260 /;
#X obj 797 306 max 2;
#X obj 900 223 t a a;
#X obj 912 430 *;
#X obj 797 135 r \$1.recvbuf;
#X obj 961 220 r \$3.from.jacktrip;
#X obj 961 240 route STATUS;
#X obj 961 260 route connected;
#X obj 797 331 spigot 0;
#X obj 797 399 t a a a, f 18;
#X obj 915 82 t a a, f 10;
#X msg 52 276 [\$4] connected localhost:\$3 => \$1:\$2;
#X msg 67 339 [\$4] disconnected localhost:\$3 => \$1:\$2;
#X obj 918 504 list append;
#X obj 993 504 r \$3.peer.name;
#X obj 961 283 t a a;
#X obj 988 306 sel 0;
#X msg 988 329 set -1;
#X obj 797 364 change -1;
#X obj 918 568 s \$1.info;
#X obj 918 480 pack f f, f 20;
#X obj 1105 215 pack f f;
#X obj 1035 408 * 10;
#X obj 1035 431 int;
#X obj 1035 454 * 0.1;
#X text 1046 480 q recvbuf;
#X obj 1105 285 s \$1.info;
#X obj 833 57 route inchannels inblocksize;
#X text 1171 216 inchannels \, blocksize;
#X obj 1105 238 list append;
#X obj 1180 238 r \$3.peer.name;
#X msg 918 530 [\$3] setting queue=\$1 (receive buffer=\$2ms);
#X msg 1105 261 [\$3] receiving stream with \$1 channels and blocksize=\$2
;
#X obj 833 80 t b a;
#X obj 900 106 f;
#X obj 539 46 r \$3.peer.ready;
#X obj 552 81 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 344 174 r \$3.udp.link.status;
#X obj 315 196 sel 0;
#X connect 0 0 12 1;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 52 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 47 0;
#X connect 11 0 113 0;
#X connect 12 0 1 0;
#X connect 13 0 15 0;
#X connect 14 0 19 0;
#X connect 15 0 17 0;
#X connect 16 0 66 0;
#X connect 18 0 4 0;
#X connect 19 0 17 0;
#X connect 20 0 49 0;
#X connect 21 0 4 0;
#X connect 23 0 24 0;
#X connect 24 0 22 0;
#X connect 25 0 18 0;
#X connect 25 1 21 0;
#X connect 27 0 29 0;
#X connect 28 0 29 1;
#X connect 29 0 51 0;
#X connect 31 0 30 0;
#X connect 33 0 32 0;
#X connect 34 0 46 0;
#X connect 34 1 31 0;
#X connect 35 0 37 0;
#X connect 35 1 34 0;
#X connect 37 0 38 0;
#X connect 38 0 43 0;
#X connect 39 0 41 0;
#X connect 40 0 42 0;
#X connect 41 0 34 0;
#X connect 42 0 44 0;
#X connect 43 0 36 0;
#X connect 44 0 41 0;
#X connect 46 0 33 0;
#X connect 47 0 23 0;
#X connect 47 0 45 0;
#X connect 47 0 56 0;
#X connect 48 0 3 1;
#X connect 49 0 50 0;
#X connect 49 1 50 0;
#X connect 50 0 12 0;
#X connect 51 0 35 0;
#X connect 51 1 35 0;
#X connect 51 2 35 0;
#X connect 51 3 35 0;
#X connect 51 4 35 0;
#X connect 52 0 25 0;
#X connect 52 1 64 0;
#X connect 54 0 86 0;
#X connect 54 1 55 1;
#X connect 55 0 87 0;
#X connect 56 0 57 0;
#X connect 57 0 55 0;
#X connect 58 0 37 1;
#X connect 59 0 38 1;
#X connect 60 0 39 0;
#X connect 62 0 61 0;
#X connect 63 0 62 0;
#X connect 63 1 8 0;
#X connect 64 0 54 0;
#X connect 65 0 64 1;
#X connect 67 0 68 0;
#X connect 68 0 102 0;
#X connect 69 0 77 0;
#X connect 70 0 69 0;
#X connect 70 1 71 0;
#X connect 71 0 69 1;
#X connect 72 0 70 0;
#X connect 73 0 75 0;
#X connect 73 1 75 1;
#X connect 74 0 76 0;
#X connect 75 0 74 0;
#X connect 76 0 83 0;
#X connect 77 0 73 0;
#X connect 77 1 78 1;
#X connect 78 0 97 0;
#X connect 79 0 75 0;
#X connect 80 0 81 0;
#X connect 81 0 82 0;
#X connect 82 0 90 0;
#X connect 83 0 93 0;
#X connect 84 0 16 0;
#X connect 84 1 95 0;
#X connect 84 2 78 0;
#X connect 85 0 109 1;
#X connect 85 1 96 1;
#X connect 86 0 53 0;
#X connect 87 0 53 0;
#X connect 88 0 106 0;
#X connect 89 0 88 1;
#X connect 90 0 83 1;
#X connect 90 1 91 0;
#X connect 91 0 92 0;
#X connect 92 0 93 0;
#X connect 93 0 84 0;
#X connect 95 0 88 0;
#X connect 96 0 104 0;
#X connect 97 0 98 0;
#X connect 98 0 99 0;
#X connect 99 0 95 1;
#X connect 102 0 108 0;
#X connect 102 1 85 0;
#X connect 104 0 107 0;
#X connect 105 0 104 1;
#X connect 106 0 94 0;
#X connect 107 0 101 0;
#X connect 108 0 109 0;
#X connect 108 1 96 0;
#X connect 109 0 72 0;
#X connect 110 0 111 0;
#X connect 112 0 11 1;
#X connect 113 1 63 0;
#X restore 13 108 pd jacktrip.start.stop;
#N canvas 353 200 1015 693 peer.assignment 0;
#X obj 146 47 r \$1.intercom;
#X obj 146 74 route refresh_peers;
#X obj 146 97 sel \$2;
#X obj 146 165 f \$2;
#X obj 146 188 + 1;
#X obj 146 235 s \$1.intercom;
#X msg 146 211 refresh_peers \$1;
#X obj 8 50 loadbang;
#X msg 8 73 symbol empty;
#X text 142 15 === refresh peers ===;
#X text 320 15 === persist my assignment ===;
#X text 7 15 === init peer ===;
#X obj 330 41 r \$1.intercom;
#X obj 330 64 route get_link_owner;
#X obj 330 87 list;
#X obj 330 111 select dummy;
#X obj 330 138 f \$2;
#X obj 330 189 s \$1.intercom;
#N canvas 830 350 450 334 grab.one 0;
#X obj 17 11 inlet;
#X obj 17 132 text search \$1.clients 4;
#X obj 17 59 symbol;
#X text 110 81 grab one only \, if none is set yet;
#X msg 17 107 -1;
#X text 46 108 -1 = unassigned;
#X obj 17 157 sel -1;
#X obj 50 214 text get \$1.clients 1 1;
#X obj 50 35 r \$3.peer.name;
#X obj 50 238 s \$3.peer.name;
#X obj 203 260 text set \$1.clients 0 4;
#X obj 203 213 list prepend \$2;
#X obj 50 183 t a a, f 26;
#X obj 17 82 select empty;
#X obj 203 236 unpack f f;
#X connect 0 0 2 0;
#X connect 1 0 6 0;
#X connect 2 0 13 0;
#X connect 4 0 1 0;
#X connect 6 1 12 0;
#X connect 7 0 9 0;
#X connect 8 0 2 1;
#X connect 11 0 14 0;
#X connect 12 0 7 0;
#X connect 12 1 11 0;
#X connect 13 0 4 0;
#X connect 14 0 10 0;
#X connect 14 1 10 1;
#X restore 221 146 pd grab.one;
#X obj 8 96 s \$3.peer.name;
#X obj 411 112 r \$3.peer.name;
#X msg 330 166 set_link_owner \$1;
#X obj 146 120 t b b b, f 13;
#N canvas 596 493 450 300 peer.readyness 0;
#X obj 15 11 inlet;
#X obj 48 35 r \$3.peer.name;
#X obj 15 62 symbol;
#X obj 15 88 text search \$1.clients 1;
#X obj 15 111 sel -1;
#X msg 48 167 1;
#X msg 15 166 0;
#X obj 15 207 s \$3.peer.ready;
#X obj 80 125 loadbang;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 8 0 6 0;
#X restore 183 180 pd peer.readyness;
#X obj 600 45 r \$3.swap.request;
#X obj 600 95 pack f s \$2;
#X obj 631 67 r \$3.peer.name;
#X msg 600 118 peer_swap_request \$1 \$2 \$3;
#X text 770 117 dst peername src;
#X obj 600 141 s \$1.intercom;
#X text 593 16 === swap peer link ===;
#X text 725 45 ----- REQUEST ---------;
#X obj 601 174 r \$1.intercom;
#X obj 601 197 route peer_swap_request;
#X obj 601 257 route \$2;
#X obj 669 221 r \$3.udp.link.status;
#X obj 669 244 == 0;
#X obj 601 220 spigot;
#X msg 670 372 peer_swap_response \$1 \$2;
#X msg 670 326 \$2;
#X obj 670 349 list append;
#X obj 733 326 r \$3.peer.name;
#X obj 670 395 s \$1.intercom;
#X text 715 174 ----- HANDLE REQUEST ---------;
#X text 713 305 ----- RESPONSE ---------;
#X text 822 372 dst peername;
#X obj 601 303 t b a a, f 12;
#X obj 635 441 s \$3.peer.name;
#X text 715 487 ----- HANDLE RESPONSE ---------;
#X msg 635 418 symbol \$1;
#X obj 601 280 list;
#X obj 601 490 r \$1.intercom;
#X obj 601 513 route peer_swap_response;
#X obj 601 536 route \$2;
#X obj 601 559 symbol;
#X obj 601 582 t b a;
#X obj 628 606 s \$3.peer.name;
#X obj 60 341 r \$3.peer.name;
#X obj 27 368 symbol;
#X obj 27 315 route fetch_settings;
#X obj 27 338 b;
#X obj 27 391 list prepend \$2;
#X msg 27 416 save_settings peer_name \$1 \$2;
#X obj 26 494 route restore_settings;
#X obj 26 517 route peer_name;
#X obj 26 540 route \$2;
#X obj 26 563 symbol;
#X obj 26 586 s \$3.peer.name;
#X obj 27 292 r \$1.intercom;
#X obj 27 442 s \$1.intercom;
#X obj 26 471 r \$1.intercom;
#X obj 289 390 r \$3.client.reset;
#X obj 289 419 sel 0;
#X obj 333 421 t a;
#X obj 289 445 t b b;
#X obj 289 497 del 300;
#X obj 316 474 f;
#X obj 357 475 + 1;
#X msg 331 453 0;
#X obj 316 525 sel 1;
#X obj 316 547 t b b;
#X msg 316 611 symbol empty;
#X obj 316 634 s \$3.peer.name;
#X obj 387 515 r \$3.peer.ready;
#X obj 387 539 == 0;
#X obj 316 581 spigot 1;
#X obj 189 489 r \$1.intercom;
#X obj 189 512 route reset;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 22 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 19 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 21 0;
#X connect 20 0 15 1;
#X connect 21 0 17 0;
#X connect 22 0 3 0;
#X connect 22 1 23 0;
#X connect 22 2 18 0;
#X connect 24 0 25 0;
#X connect 25 0 27 0;
#X connect 26 0 25 1;
#X connect 27 0 29 0;
#X connect 32 0 33 0;
#X connect 33 0 37 0;
#X connect 34 0 50 0;
#X connect 35 0 36 0;
#X connect 36 0 37 1;
#X connect 37 0 34 0;
#X connect 38 0 42 0;
#X connect 39 0 40 0;
#X connect 40 0 38 0;
#X connect 41 0 40 1;
#X connect 46 0 23 0;
#X connect 46 1 49 0;
#X connect 46 2 39 0;
#X connect 49 0 47 0;
#X connect 50 0 46 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 54 0;
#X connect 54 0 55 0;
#X connect 55 0 23 0;
#X connect 55 1 56 0;
#X connect 57 0 58 1;
#X connect 58 0 61 0;
#X connect 59 0 60 0;
#X connect 60 0 58 0;
#X connect 61 0 62 0;
#X connect 62 0 69 0;
#X connect 63 0 64 0;
#X connect 64 0 65 0;
#X connect 65 0 66 0;
#X connect 66 0 67 0;
#X connect 68 0 59 0;
#X connect 70 0 63 0;
#X connect 71 0 72 0;
#X connect 72 0 74 0;
#X connect 72 1 73 0;
#X connect 73 0 72 1;
#X connect 74 0 75 0;
#X connect 74 1 76 0;
#X connect 75 0 78 0;
#X connect 76 0 77 0;
#X connect 76 0 79 0;
#X connect 77 0 76 1;
#X connect 78 0 76 1;
#X connect 79 0 80 0;
#X connect 80 0 85 0;
#X connect 80 1 78 0;
#X connect 81 0 82 0;
#X connect 83 0 84 0;
#X connect 84 0 85 1;
#X connect 85 0 81 0;
#X connect 86 0 87 0;
#X connect 87 0 85 0;
#X restore 13 12 pd peer.assignment;
#N canvas 604 155 836 898 init.proxy.connection 0;
#X msg 351 133 set /\$1;
#X obj 424 112 r \$1.receive;
#X obj 424 179 routeOSC /__;
#X obj 424 136 routeOSC /*;
#X obj 80 187 s \$1.send;
#X obj 80 116 f;
#X obj 16 10 r \$3.initiate.server;
#X obj 424 156 routeOSC /tpf/requestproxyconnection;
#X obj 16 233 s \$3.udp.link.status;
#X obj 16 183 del 0;
#X msg 16 205 5;
#X obj 357 259 r \$3.tx.switch.s;
#X obj 382 282 r \$3.udp.link.status;
#X obj 384 330 r \$3.peer.ready;
#X obj 357 282 f;
#X obj 357 330 f;
#X obj 357 352 sel 1;
#X obj 357 373 t b b;
#X obj 357 486 s \$3.udp.link.status;
#X obj 357 399 del 0;
#X obj 469 437 s \$1.send;
#X obj 469 371 f;
#X obj 469 392 pack f f;
#X msg 469 415 /\$1/tpf/startproxyconnection/\$2;
#X obj 357 305 sel 6;
#X msg 14 334 set /\$1;
#X obj 87 313 r \$1.receive;
#X obj 87 380 routeOSC /__;
#X obj 87 337 routeOSC /*;
#X obj 87 357 routeOSC /tpf/startproxyconnection;
#X msg 357 463 7;
#X obj 87 401 b;
#X obj 112 424 r \$3.udp.link.status;
#X obj 87 424 f;
#X obj 87 447 sel 5;
#X obj 114 468 r \$3.peer.ready;
#X obj 87 468 f;
#X obj 87 491 sel 1;
#X obj 87 565 s \$3.udp.link.status;
#X msg 87 543 7;
#X obj 594 729 s \$3.to.jacktrip;
#X obj 384 725 s \$3.peer.port;
#X obj 312 675 r \$1.host;
#X obj 279 699 symbol;
#X obj 279 725 s \$3.peer.host;
#X obj 279 583 t b b b b, f 53;
#X obj 87 512 t b b;
#X obj 357 420 t b b;
#X obj 138 116 r \$1.id;
#X obj 351 90 r \$3.peer.id;
#X obj 14 287 r \$3.peer.id;
#X obj 95 94 r \$3.peer.id;
#X obj 484 340 r \$3.peer.id;
#X obj 514 369 r \$1.id;
#X obj 399 676 r \$1.audioport;
#X obj 384 701 f;
#X msg 594 706 enabletoken \$1;
#X obj 489 618 s \$3.set.random.bind.port;
#X obj 594 670 symbol;
#X obj 627 646 r \$3.connection.token;
#X obj 80 139 pack f f s, f 20;
#X msg 80 163 /\$1/tpf/requestproxyconnection/\$2 \$3;
#X obj 16 31 t b b b, f 22;
#X obj 197 77 token-generator 20;
#X obj 197 100 t a a;
#X obj 210 126 s \$3.connection.token;
#N canvas 0 103 755 431 deal.with.race.condition 0;
#X obj 52 85 r \$3.udp.link.status;
#X obj 54 193 r \$3.peer.ready;
#X obj 27 85 f;
#X obj 27 168 sel 0 4;
#X obj 27 193 f;
#X obj 27 215 sel 1;
#X obj 27 329 s \$3.udp.link.status;
#X msg 27 308 6;
#X obj 198 68 symbol;
#X obj 54 288 s \$3.connection.token;
#X obj 27 42 t b a, f 29;
#X obj 27 18 inlet;
#X obj 250 155 r \$3.peer.ready;
#X obj 223 155 f;
#X obj 223 177 sel 1;
#X obj 223 130 sel 5;
#X obj 27 240 t b b;
#X obj 54 265 symbol;
#X obj 223 393 s \$3.udp.link.status;
#X msg 223 372 7;
#X text 354 17 When both clients initiatate a connection simultaneously
\, their requests cross each other and we want to establish a connecction
immediately without confirmation (before we dealt with that situation
\, both clients flashed blue happily waiting for confirmation).;
#X text 352 95 If the requests cross each other \, there is ambiguity
about the token \, since both clients have sent a different one. To
address that \, we select the token of the party with the smaller ID.
;
#X obj 310 327 s \$3.connection.token;
#X obj 310 303 symbol;
#X obj 339 234 r \$1.id;
#X obj 325 206 r \$3.peer.id;
#X obj 310 231 f;
#X obj 310 254 <;
#X obj 310 277 sel 1;
#X obj 223 200 t b b b, f 15;
#X obj 266 356 s \$0.set.jack.params;
#X connect 0 0 2 1;
#X connect 1 0 4 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 4 0;
#X connect 3 2 15 0;
#X connect 4 0 5 0;
#X connect 5 0 16 0;
#X connect 7 0 6 0;
#X connect 8 0 17 1;
#X connect 8 0 23 1;
#X connect 10 0 2 0;
#X connect 10 1 8 0;
#X connect 11 0 10 0;
#X connect 12 0 13 1;
#X connect 13 0 14 0;
#X connect 14 0 29 0;
#X connect 15 0 13 0;
#X connect 15 1 13 0;
#X connect 16 0 7 0;
#X connect 16 1 17 0;
#X connect 17 0 9 0;
#X connect 19 0 18 0;
#X connect 23 0 22 0;
#X connect 24 0 27 1;
#X connect 25 0 26 1;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 23 0;
#X connect 29 0 19 0;
#X connect 29 1 30 0;
#X connect 29 2 26 0;
#X restore 424 208 pd deal.with.race.condition;
#X obj 384 462 s \$0.set.jack.params;
#X obj 114 537 s \$0.set.jack.params;
#X obj 279 554 r \$0.set.jack.params;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 66 0;
#X connect 3 0 7 0;
#X connect 5 0 60 0;
#X connect 6 0 62 0;
#X connect 7 0 2 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 14 0;
#X connect 12 0 14 1;
#X connect 13 0 15 1;
#X connect 14 0 24 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 17 1 21 0;
#X connect 19 0 47 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 20 0;
#X connect 24 0 15 0;
#X connect 25 0 27 0;
#X connect 26 0 28 0;
#X connect 27 0 31 0;
#X connect 28 0 29 0;
#X connect 29 0 27 0;
#X connect 30 0 18 0;
#X connect 31 0 33 0;
#X connect 32 0 33 1;
#X connect 33 0 34 0;
#X connect 34 0 36 0;
#X connect 35 0 36 1;
#X connect 36 0 37 0;
#X connect 37 0 46 0;
#X connect 39 0 38 0;
#X connect 42 0 43 1;
#X connect 43 0 44 0;
#X connect 45 0 43 0;
#X connect 45 1 55 0;
#X connect 45 2 57 0;
#X connect 45 3 58 0;
#X connect 46 0 39 0;
#X connect 46 1 68 0;
#X connect 47 0 30 0;
#X connect 47 1 67 0;
#X connect 48 0 60 1;
#X connect 49 0 0 0;
#X connect 50 0 25 0;
#X connect 51 0 5 1;
#X connect 52 0 21 1;
#X connect 53 0 22 1;
#X connect 54 0 55 1;
#X connect 55 0 41 0;
#X connect 56 0 40 0;
#X connect 58 0 56 0;
#X connect 59 0 58 1;
#X connect 60 0 61 0;
#X connect 61 0 4 0;
#X connect 62 0 9 0;
#X connect 62 1 5 0;
#X connect 62 2 63 0;
#X connect 63 0 64 0;
#X connect 64 0 60 2;
#X connect 64 1 65 0;
#X connect 69 0 45 0;
#X restore 13 84 pd init.proxy.connection;
#N canvas 500 147 821 830 init.stun.connection 0;
#X obj 10 34 r \$1.receive;
#X obj 10 78 routeOSC /tpf/setpeerport;
#X obj 10 112 routeOSC /__;
#X msg 147 41 set /\$1;
#X obj 37 185 s \$3.peer.port;
#X obj 371 24 r \$1.receive;
#X obj 371 91 routeOSC /__;
#X obj 371 68 routeOSC /tpf/requestpeerport;
#X obj 9 750 s \$1.send;
#X obj 49 561 f;
#X obj 49 582 pack f f;
#X obj 452 660 random 28232;
#X obj 452 680 + 32768;
#X obj 452 705 s \$3.bind.port;
#X obj 49 613 list append;
#X obj 112 592 r \$3.bind.port;
#X obj 371 115 b;
#X obj 9 668 list append;
#X msg 9 690 /\$1/tpf/requestpeerport/\$2;
#X obj 10 58 routeOSC /*;
#X obj 371 48 routeOSC /*;
#N canvas 750 229 301 279 random.seed 0;
#X obj 35 24 loadbang;
#X obj 34 96 realtime;
#X obj 35 66 t b b b;
#X obj 121 128 until;
#X obj 121 148 234.235;
#X obj 121 168 pow 9.2348;
#X obj 34 116 * 1239.29;
#X obj 34 136 int;
#X obj 34 156 mod 9877;
#X obj 34 197 outlet;
#X msg 121 105 143726;
#X msg 34 177 seed \$1;
#X connect 0 0 2 0;
#X connect 1 0 6 0;
#X connect 2 0 1 1;
#X connect 2 1 10 0;
#X connect 2 2 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 10 0 3 0;
#X connect 11 0 9 0;
#X restore 477 636 pd random.seed;
#X obj 24 407 r \$3.peer.ready;
#X obj 9 433 f;
#X obj 9 455 sel 1;
#X msg 111 455 1;
#X obj 111 474 s \$3.udp.link.status;
#X obj 396 148 r \$3.udp.link.status;
#X obj 398 196 r \$3.peer.ready;
#X obj 371 148 f;
#X obj 371 171 sel 0 4;
#X obj 371 196 f;
#X obj 371 218 sel 1;
#X obj 371 261 s \$3.udp.link.status;
#X msg 371 240 2;
#X obj 295 323 r \$3.tx.switch.s;
#X obj 320 346 r \$3.udp.link.status;
#X obj 322 394 r \$3.peer.ready;
#X obj 295 346 f;
#X obj 295 394 f;
#X obj 295 416 sel 1;
#X obj 295 369 sel 2;
#X obj 10 132 t b a;
#X obj 35 213 r \$3.udp.link.status;
#X obj 37 261 r \$3.peer.ready;
#X obj 10 213 f;
#X obj 10 261 f;
#X obj 10 283 sel 1;
#X obj 10 236 sel 1;
#X obj 10 347 s \$3.udp.link.status;
#X msg 10 325 3;
#X msg 295 484 3;
#X obj 295 516 s \$3.udp.link.status;
#X obj 295 463 del 0;
#X obj 9 477 t b b b;
#X obj 49 516 t b b;
#X obj 111 433 del 0;
#X obj 9 380 r \$3.initiate.stun;
#X obj 10 304 t b b;
#X obj 144 331 s \$3.to.jacktrip;
#X obj 295 437 t b b b;
#X msg 144 308 disabletoken;
#X obj 144 244 t b b;
#X text 611 38 0 = reset;
#X text 612 116 4 = aborted;
#X text 611 58 1 = waiting for peer (stun);
#X text 611 78 2 = waiting for user (stun);
#X text 613 99 3 = connected (stun);
#X text 612 137 5 = waiting for peer (server);
#X text 613 156 6 = waiting for user (server);
#X text 613 177 7 = connected (server);
#X obj 427 573 s \$3.set.random.bind.port;
#X obj 452 614 r \$3.set.random.bind.port;
#X obj 64 539 r \$3.peer.id;
#X obj 94 559 r \$1.id;
#X obj 147 20 r \$3.peer.id;
#X obj 214 589 r \$1.intercom;
#X obj 214 612 route local_address;
#X obj 49 636 list append;
#X obj 127 185 s \$3.peer.local_ip;
#N canvas 491 144 585 507 destination_host 0;
#X obj 86 201 r \$3.peer.ip;
#X obj 59 398 s \$3.peer.host;
#X obj 26 14 inlet;
#X text 204 9 reasoning;
#X text 204 23 =========;
#X text 202 42 For a peer-2-peer connection \, we usually connect to
the peer IP as seen by the server. However \, when we detect that peer
has the same IP as we have from the server's perspective \, we assume
peer and local are in the same local network. Thus we do not connect
to the IP as seen by the server \, but to the IP that the peer detects
from [tcpclient] \, thus allowing peer-2-peer connections within local
area networks.;
#X obj 26 136 sel -1;
#X obj 59 157 text get \$1.clients;
#X obj 41 61 r \$1.id;
#X obj 26 88 f;
#X obj 26 116 text search \$1.clients 0;
#X msg 59 180 symbol \$4;
#X obj 59 225 sel _;
#X obj 215 273 b;
#X obj 92 323 r \$3.peer.local_ip;
#X obj 248 329 r \$3.peer.ip;
#X obj 59 351 symbol;
#X obj 215 355 symbol;
#X connect 0 0 12 1;
#X connect 2 0 9 0;
#X connect 6 1 7 0;
#X connect 7 0 11 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 12 1 13 0;
#X connect 13 0 17 0;
#X connect 14 0 16 1;
#X connect 15 0 17 1;
#X connect 16 0 1 0;
#X connect 17 0 1 0;
#X restore 172 278 pd destination_host;
#X msg 214 635 symbol \$1.\$2.\$3.\$4;
#X msg 49 713 /\$1/tpf/setpeerport/\$2 \$3 \$4;
#X obj 37 157 unpack f s;
#X connect 0 0 19 0;
#X connect 1 0 2 0;
#X connect 2 0 42 0;
#X connect 3 0 2 0;
#X connect 3 0 6 0;
#X connect 5 0 20 0;
#X connect 6 0 16 0;
#X connect 7 0 6 0;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 78 0;
#X connect 15 0 14 1;
#X connect 16 0 29 0;
#X connect 17 0 18 0;
#X connect 18 0 8 0;
#X connect 19 0 1 0;
#X connect 20 0 7 0;
#X connect 21 0 11 0;
#X connect 22 0 23 1;
#X connect 23 0 24 0;
#X connect 24 0 54 0;
#X connect 25 0 26 0;
#X connect 27 0 29 1;
#X connect 28 0 31 1;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 30 1 31 0;
#X connect 31 0 32 0;
#X connect 32 0 34 0;
#X connect 34 0 33 0;
#X connect 35 0 38 0;
#X connect 36 0 38 1;
#X connect 37 0 39 1;
#X connect 38 0 41 0;
#X connect 39 0 40 0;
#X connect 40 0 60 0;
#X connect 41 0 39 0;
#X connect 42 0 45 0;
#X connect 42 1 83 0;
#X connect 43 0 45 1;
#X connect 44 0 46 1;
#X connect 45 0 48 0;
#X connect 46 0 47 0;
#X connect 47 0 58 0;
#X connect 48 0 46 0;
#X connect 50 0 49 0;
#X connect 51 0 52 0;
#X connect 53 0 51 0;
#X connect 54 0 17 0;
#X connect 54 1 55 0;
#X connect 54 2 56 0;
#X connect 55 0 9 0;
#X connect 55 1 71 0;
#X connect 56 0 25 0;
#X connect 57 0 23 0;
#X connect 58 0 50 0;
#X connect 58 1 62 0;
#X connect 60 0 53 0;
#X connect 60 1 55 0;
#X connect 60 2 62 0;
#X connect 61 0 59 0;
#X connect 62 0 61 0;
#X connect 62 1 80 0;
#X connect 72 0 11 0;
#X connect 73 0 9 1;
#X connect 74 0 10 1;
#X connect 75 0 3 0;
#X connect 76 0 77 0;
#X connect 77 0 81 0;
#X connect 78 0 17 1;
#X connect 78 0 82 0;
#X connect 81 0 78 1;
#X connect 82 0 8 0;
#X connect 83 0 4 0;
#X connect 83 1 79 0;
#X restore 13 60 pd init.stun.connection;
